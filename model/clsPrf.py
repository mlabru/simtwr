#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SICAD
#*  Classe...: clsPrf
#*
#*  Descricao: this file is the clsPrf class of the SiCAD.
#*             The clsPrf class holds information about a performance.
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteracao
#*  -----------------------------------------------------------------------------------------------
#*  correa   1997/fev/12  version started
#*  mlabru   2008/fev/12  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versao
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/fev/12  version started
#*  1.2-0.1  2008/jun/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ SiCAD / model
#/ ------------------------------------------------------------------------------------------------
import model.locDefs as locDefs
import model.glbDefs as glbDefs

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  clsPrf::prfFam
#*  -----------------------------------------------------------------------------------------------
#*  the object holding all information concerning perfromance
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class prfFam:

    #** -------------------------------------------------------------------------------------------
    #*  prfFam::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initialize family class
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "prfFam::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  altitude maxima
        #*/
        self._uiAltitudeMaxima = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade minima de decolagem
        #*/
        self._uiVelocDecol = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade maxima de pouso
        #*/
        self._uiVelocPouso = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade de subida
        #*/
        self._uiVelocSubida = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade maxima
        #*/
        self._uiVelocMaxima = 0

        #** ---------------------------------------------------------------------------------------
        #*  aceleracao de voo
        #*/
        self._uiAceleraVoo = 0

        #** ---------------------------------------------------------------------------------------
        #*  desaceleracao de voo
        #*/
        self._uiDesaceleraVoo = 0

        #** ---------------------------------------------------------------------------------------
        #*  aceleracao minima de decolagem
        #*/
        self._uiAceleraDecol = 0

        #** ---------------------------------------------------------------------------------------
        #*  desaceleracao maxima de pouso
        #*/
        self._uiDesaceleraPouso = 0

        #** ---------------------------------------------------------------------------------------
        #*  razao de subida
        #*/
        self._uiRazaoSubida = 0

        #** ---------------------------------------------------------------------------------------
        #*  razao de descida
        #*/
        self._uiRazaoDescida = 0

        #** ---------------------------------------------------------------------------------------
        #*  razao maxima de descida
        #*/
        self._uiRazaoDescMax = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade de circuito
        #*/
        self._uiVelocCkt = 0

        #** ---------------------------------------------------------------------------------------
        #*  altitude de circuito
        #*/
        self._uiAltitCkt = 0

        #** ---------------------------------------------------------------------------------------
        #*  circuito
        #*/
        self._uiCircuito = 0

        #** ---------------------------------------------------------------------------------------
        #*  velocidade maxima de taxi
        #*/
        self._uiVelocTaxi = 0

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

#** -----------------------------------------------------------------------------------------------
#*  clsPrf::clsPrf
#*  -----------------------------------------------------------------------------------------------
#*  the object holding all information concerning perfromance
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class clsPrf:

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initialize performance class
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self, f_szPrf ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert ( f_szPrf )
        #l_log.info ( "Performance a carregar: " + f_szPrf )

        #** ---------------------------------------------------------------------------------------
        #*  abre o arquivo de performance
        #*/
        l_fdPrf = open ( f_szPrf, "r" )
        assert ( l_fdPrf )

        #** ---------------------------------------------------------------------------------------
        #*  cria a area de dados
        #*/
        l_data = []

        #** ---------------------------------------------------------------------------------------
        #*  percorre todas as linhas do arquivo de performance
        #*/
        for l_line in l_fdPrf.readlines ():

            #** -----------------------------------------------------------------------------------
            #*  checa se eh uma linha de comentario ou vazia
            #*/
            if (( not l_line.startswith ( "#" )) and
                ( not l_line.startswith ( "\n" ))):

                #** -------------------------------------------------------------------------------
                #*  checa end-of-line
                #*/
                if ( l_line.endswith ( "\n" ) or l_line.endswith ( "\x1a" )):

                    #** ---------------------------------------------------------------------------
                    #*  aceita o valor sem o end-of-line
                    #*/
                    l_data.extend ( l_line [ :-1 ].split ())

                else:

                    #** ---------------------------------------------------------------------------
                    #*  aceita o valor
                    #*/
                    l_data.extend ( l_line.split ())

        #** ---------------------------------------------------------------------------------------
        #*  fecha o arquivo
        #*/
        l_fdPrf.close ()

        #** ---------------------------------------------------------------------------------------
        #*  cria a tabela de performance
        #*/
        self._tabPrf = [ x for x in xrange ( locDefs.xMAX_Familias + 1 ) ]
        assert ( self._tabPrf )

        #l_log.info ( "self._tabPrf: " + str ( self._tabPrf ))

        #** ---------------------------------------------------------------------------------------
        #*  carrega a tabela de performance
        #*/
        self.loadPerformance ( l_data )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::loadPerformance
    #*  -------------------------------------------------------------------------------------------
    #*  carrega os dados do performance
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_data - DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def loadPerformance ( self, f_data ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::loadPerformance"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  zera indice
        #*/
        l_iD = 0

        #** ---------------------------------------------------------------------------------------
        #*  carrega os dados do arquivo de performance
        #*/
        for l_btFam in xrange ( 1, locDefs.xMAX_Familias + 1 ):

            #l_log.info ( "l_btFam: " + str ( l_btFam ))

            #** -----------------------------------------------------------------------------------
            #*  cria a familia
            #*/
            l_Fam = prfFam ()
            assert ( l_Fam )

            #l_log.info ( "l_Fam: " + str ( l_Fam ))

            #** -----------------------------------------------------------------------------------
            #*  altitude maxima
            #*/
            l_Fam._uiAltitudeMaxima = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "altitude maxima: " + str ( l_Fam._uiAltitudeMaxima ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade minima de decolagem
            #*/
            l_Fam._uiVelocDecol = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade minima de decolagem: " + str ( l_Fam._uiVelocDecol ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade maxima de pouso
            #*/
            l_Fam._uiVelocPouso = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade maxima de pouso: " + str ( l_Fam._uiVelocPouso ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade de subida
            #*/
            l_Fam._uiVelocSubida = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade de subida: " + str ( l_Fam._uiVelocSubida ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade maxima
            #*/
            l_Fam._uiVelocMaxima = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade maxima: " + str ( l_Fam._uiVelocMaxima ))

            #** -----------------------------------------------------------------------------------
            #*  aceleracao de voo
            #*/
            l_Fam._uiAceleraVoo = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "aceleracao de voo: " + str ( l_Fam._uiAceleraVoo ))
            #l_log.info ( "aceleracao de voo(2): " + str ( l_Fam._uiAceleraVoo * glbDefs.xCNV_KMin2Ms2 ))

            #** -----------------------------------------------------------------------------------
            #*  desaceleracao de voo
            #*/
            l_Fam._uiDesaceleraVoo = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "desaceleracao de voo: " + str ( l_Fam._uiDesaceleraVoo ))
            #l_log.info ( "desaceleracao de voo(2): " + str ( l_Fam._uiDesaceleraVoo * glbDefs.xCNV_KMin2Ms2 ))

            #** -----------------------------------------------------------------------------------
            #*  aceleracao minima de decolagem
            #*/
            l_Fam._uiAceleraDecol = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "aceleracao minima de decolagem: " + str ( l_Fam._uiAceleraDecol ))
            #l_log.info ( "aceleracao minima de decolagem(2): " + str ( l_Fam._uiAceleraDecol * glbDefs.xCNV_KMin2Ms2 ))

            #** -----------------------------------------------------------------------------------
            #*  desaceleracao maxima de pouso
            #*/
            l_Fam._uiDesaceleraPouso = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "desaceleracao maxima de pouso: " + str ( l_Fam._uiDesaceleraPouso ))
            #l_log.info ( "desaceleracao maxima de pouso(2): " + str ( l_Fam._uiDesaceleraPouso * glbDefs.xCNV_KMin2Ms2 ))

            #** -----------------------------------------------------------------------------------
            #*  razao de subida
            #*/
            l_Fam._uiRazaoSubida = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "razao de subida: " + str ( l_Fam._uiRazaoSubida ))
            #l_log.info ( "razao de subida(2): " + str ( l_Fam._uiRazaoSubida * glbDefs.xCNV_ftMin2Ms ))

            #** -----------------------------------------------------------------------------------
            #*  razao de descida
            #*/
            l_Fam._uiRazaoDescida = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "razao de descida: " + str ( l_Fam._uiRazaoDescida ))
            #l_log.info ( "razao de descida(2): " + str ( l_Fam._uiRazaoDescida * glbDefs.xCNV_ftMin2Ms ))

            #** -----------------------------------------------------------------------------------
            #*  razao maxima de descida
            #*/
            l_Fam._uiRazaoDescMax = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "razao maxima de descida: " + str ( l_Fam._uiRazaoDescMax ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade de circuito
            #*/
            l_Fam._uiVelocCkt = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade de circuito: " + str ( l_Fam._uiVelocCkt ))

            #** -----------------------------------------------------------------------------------
            #*  altitude de circuito
            #*/
            l_Fam._uiAltitCkt = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "altitude de circuito: " + str ( l_Fam._uiAltitCkt ))

            #** -----------------------------------------------------------------------------------
            #*  circuito
            #*/
            l_ckt = int ( f_data [ l_iD ] )
            l_iD += 1

            assert (( l_ckt > 0 ) and ( l_ckt <= locDefs.xMAX_Circuitos ))

            l_Fam._uiCircuito = l_ckt - 1
            #l_log.info ( "circuito: " + str ( l_Fam._uiCircuito ))

            #** -----------------------------------------------------------------------------------
            #*  velocidade maxima de taxi
            #*/
            l_Fam._uiVelocTaxi = int ( f_data [ l_iD ] )
            l_iD += 1

            #l_log.info ( "velocidade maxima de taxi: " + str ( l_Fam._uiVelocTaxi ))

            #** -----------------------------------------------------------------------------------
            #*  salva a familia
            #*/
            self._tabPrf [ l_btFam ] = l_Fam

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** ===========================================================================================
    #*  rotinas de exportacao de dados da tabela de performance
    #*  ===========================================================================================
    #*/

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getAceleracaoDep
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getAceleracaoDep ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getAceleracaoDep"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiAceleraDecol * glbDefs.xCNV_KMin2Ms2 )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getAceleracaoVoo
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getAceleracaoVoo ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getAceleracaoVoo"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiAceleraVoo * glbDefs.xCNV_KMin2Ms2 )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getAltitudeCircuito
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getAltitudeCircuito ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getAltitudeCircuito"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiAltitCkt )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getAltitudeMaxima
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getAltitudeMaxima ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getAltitudeMaxima"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiAltitudeMaxima )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getCircuito
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getCircuito ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getCircuito"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiCircuito )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getDesaceleracaoArr
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getDesaceleracaoArr ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getDesaceleracaoArr"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiDesaceleraPouso * glbDefs.xCNV_KMin2Ms2 )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getDesaceleracaoVoo
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getDesaceleracaoVoo ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getDesaceleracaoVoo"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiDesaceleraVoo * glbDefs.xCNV_KMin2Ms2 )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoCurvaRota
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoCurvaRota ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoCurvaRota"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        #return ( self._tabPrf [ f_iFam ]._uiRazaoDescida * glbDefs.xCNV_ftMin2Ms )

        #** ---------------------------------------------------------------------------------------
        #*/
        if ( 8 == f_iFam ):

            return ( 7. )

        else:

            return ( 3. )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoCurvaSolo
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoCurvaSolo ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoCurvaSolo"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        #return ( self._tabPrf [ f_iFam ]._uiRazaoDescida * glbDefs.xCNV_ftMin2Ms )

        #** ---------------------------------------------------------------------------------------
        #*/
        if ( 8 == f_iFam ):

            return ( 45. )

        else:

            return ( 15. )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoCurvaTrafego
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoCurvaTrafego ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoCurvaTrafego"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        #return ( self._tabPrf [ f_iFam ]._uiRazaoDescida * glbDefs.xCNV_ftMin2Ms )

        #** ---------------------------------------------------------------------------------------
        #*/
        if ( 8 == f_iFam ):

            return ( 15. )

        else:

            return ( 6. )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoDescida
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoDescida ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoDescida"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiRazaoDescida * glbDefs.xCNV_ftMin2Ms )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoDescidaMax
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoDescidaMax ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoDescidaMax"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiRazaoDescMax )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getRazaoSubida
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getRazaoSubida ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getRazaoSubida"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiRazaoSubida * glbDefs.xCNV_ftMin2Ms )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeArr
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeArr ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeArr"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocPouso )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeCircuito
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeCircuito ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeCircuito"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocCkt )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeDep
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeDep ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeDep"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ----------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocDecol )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeMaxima
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeMaxima ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeMaxima"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocMaxima )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeSubida
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeSubida ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeSubida"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocSubida )

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getVelocidadeTaxi
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getVelocidadeTaxi ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getVelocidadeTaxi"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ]._uiVelocTaxi )

    #** ===========================================================================================
    #*  rotinas de exportacao de entrada da tabela de performance
    #*  ===========================================================================================
    #*/

    #** -------------------------------------------------------------------------------------------
    #*  clsPrf::getPerformance
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getPerformance ( self, f_iFam ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "clsPrf::getPerformance"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( logging.INFO )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_iFam > 0 ) and ( f_iFam <= locDefs.xMAX_Familias ))

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._tabPrf [ f_iFam ] )

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "clsPrf" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*
    l_prf = clsPrf ( "tab/PERFORM.TAB" )

#** ----------------------------------------------------------------------------------------------- *#

