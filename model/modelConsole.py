#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiCAD
#*  Classe...: modelConsole
#*
#*  Descrição: DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteração
#*  -----------------------------------------------------------------------------------------------
#*  correa   1997/jun/20  version started
#*  mlabru   2008/jun/20  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versão
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/jun/20  version started
#*  1.2-0.1  2008/jun/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ Python library
#/ ------------------------------------------------------------------------------------------------
import os

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ SiCAD / model
#/ ------------------------------------------------------------------------------------------------
import model.data as data
import model.locDefs as locDefs

import model.clsAer as clsAer
import model.clsExe as clsExe

import model.modelManager as modelManager

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  modelConsole::modelConsole
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/
class modelConsole ( modelManager.modelManager ):

    #** -------------------------------------------------------------------------------------------
    #*  modelConsole::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initializes the display
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        l_szMetodo = "modelConsole::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        l_log = logging.getLogger ( l_szMetodo )
        l_log.setLevel ( logging.INFO )
        l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  inicia a superclass
        #*/
        modelManager.modelManager.__init__ ( self )

        #** ---------------------------------------------------------------------------------------
        #*  inicia variáveis de instancia
        #*/
        #self._oPrf = None

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  modelConsole::iniciaBaseDados
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def iniciaBaseDados ( self, f_szExe ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        l_szMetodo = "modelConsole::iniciaBaseDados"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        l_log = logging.getLogger ( l_szMetodo )
        l_log.setLevel ( logging.INFO )
        l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parametros de entrada
        #*/
        assert (( f_szExe ) and ( "" != f_szExe ))

        #** ---------------------------------------------------------------------------------------
        #*  carrega o arquivo de exercício
        #*/
        self._oExe = clsExe.clsExe ( f_szExe )
        assert ( self._oExe )

        #** ---------------------------------------------------------------------------------------
        #*  obtem o indicativo do aeródromo
        #*/
        l_szInd = self._oExe.getIndicativo ().upper ()
        l_log.info ( "Indicativo: " + l_szInd )

        #** ---------------------------------------------------------------------------------------
        #*  monta o nome do arquivo de aeródromo
        #*/
        l_szAer = data.filepath ( os.path.join ( locDefs.xDIR_AER, l_szInd ))
        l_log.info ( u"Arquivo de aeródromo: " + l_szAer )

        #** ---------------------------------------------------------------------------------------
        #*  carrega o arquivo de aeródromo
        #*/
        self._oAer = clsAer.clsAer ( l_szAer )
        assert ( self._oAer )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( True )

    #** ===========================================================================================
    #*  acesso a area de dados do objeto
    #*  ===========================================================================================
    #*/

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "modelConsole" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*
    l_mm = modelConsole ()
    assert ( l_mm )

#** ----------------------------------------------------------------------------------------------- *#
