#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiCAD
#*  Classe...: data
#*
#*  Descricao: simple data loader module. Loads data files from the "data" directory shipped with
#*             a SiCAD. Enhancing this to handle caching etc.
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteracao
#*  -----------------------------------------------------------------------------------------------
#*  correa   1997/fev/12  version started
#*  mlabru   2008/fev/12  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versao
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/fev/12  version started
#*  1.2-0.1  2008/jun/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ Python library
#/ ------------------------------------------------------------------------------------------------
import os

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/
data_py  = os.path.abspath ( os.path.dirname ( __file__ ))
data_dir = os.path.normpath ( os.path.join ( data_py, '..' ))

#** -----------------------------------------------------------------------------------------------
#*  data::filepath
#*  -----------------------------------------------------------------------------------------------
#*  determine the path to a file in the data directory
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
def filepath ( filename ):

    #/ nome do metodo (logger)
    #/ --------------------------------------------------------------------------------------------
    #l_szMetodo = "data::filepath"


    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #l_log = logging.getLogger ( l_szMetodo )
    #l_log.setLevel ( logging.INFO )
    #l_log.debug ( ">> " )

    #l_log.info ( "data_dir: " + data_dir )
    #l_log.info ( "filename: " + filename )

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*/
    return ( os.path.join ( data_dir, filename ))

#** -----------------------------------------------------------------------------------------------
#*  data::load
#*  -----------------------------------------------------------------------------------------------
#*  open a file in the data directory
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
def load ( filename, mode='rb' ):

    #/ nome do metodo (logger)
    #/ --------------------------------------------------------------------------------------------
    #l_szMetodo = "data::load"


    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #l_log = logging.getLogger ( l_szMetodo )
    #l_log.setLevel ( logging.INFO )
    #l_log.debug ( ">> " )

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*/
    return ( open ( os.path.join ( data_dir, filename ), mode ))

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "data" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*
    print "data_py.: " + data_py
    print "data_dir: " + data_dir

#** ----------------------------------------------------------------------------------------------- *#
