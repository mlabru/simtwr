#!/usr/bin/env python2.5
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiCAD
#*  Classe...: dlgConfig
#*
#*  Descricao: da inicio ao sistema, inicializar todas as variaveis
#*             globais utilizadas no sistema
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteracao
#*  -----------------------------------------------------------------------------------------------
#*  mlabru   2008/???/??  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versao
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/???/??  version started
#*  1.2-0.1  2008/JUN/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  dlgConfig::dlgConfig
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class dlgConfig:

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfig::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self ):

        #/ nome do metodo (logger)
        #/ -----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfig::__init__"


        #** ----------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ----------------------------------------------------------------------------------------
        #*  flag Ok
        #*/
        self._bOk = False

        #** ----------------------------------------------------------------------------------------
        #*  Ok button
        #*/
        self._btnOk = 0

        #** ----------------------------------------------------------------------------------------
        #*  frame master
        #*/
        self._frmM = 0

        #** ----------------------------------------------------------------------------------------
        #*  canal de dados
        #*/
        self._lbxCanal = None

        #** ----------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfig::criaWinCfg
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def criaWinCfg ( self, f_tkRoot ): pass

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfig::criaWinCfg"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfig::doOk
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doOk ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfig::doOk"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*/
        self._frmM.quit ()

        #** ---------------------------------------------------------------------------------------
        #*/
        self._bOk = True

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfig::doCancel
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doCancel ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfig::doCancel"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*/
        self._frmM.quit ()

        #** ---------------------------------------------------------------------------------------
        #*/
        self._bOk = False

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfig::startConfigPanel
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def startConfigPanel ( self ): pass

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfig::startConfigPanel"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "dlgConfig" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** ----------------------------------------------------------------------------------------------- *#
