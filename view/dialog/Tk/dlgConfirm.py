#!/usr/bin/env python2.5
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiCAD
#*  Classe...: dlgConfirm
#*
#*  Descricao: da inicio ao sistema, inicializar todas as variaveis
#*             globais utilizadas no sistema
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteracao
#*  -----------------------------------------------------------------------------------------------
#*  mlabru   2008/???/??  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versao
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/???/??  version started
#*  1.2-0.1  2008/JUN/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ Tkinter (gui library)
#/ ------------------------------------------------------------------------------------------------
import Tkinter

#/ SiCAD / view
#/ ------------------------------------------------------------------------------------------------
import view.dialog.Tk.tkDialogs as tkDialogs

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  dlgConfirm::dlgConfirm
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class dlgConfirm ( tkDialogs.tkDialogs ):

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfirm::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self, f_title, f_prompt ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfirm::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  indice de opcoes
        #*/
        self._szPrompt = f_prompt
        #assert ( self._szPrompt )

        #** ---------------------------------------------------------------------------------------
        #*  inicia a superclass
        #*/
        tkDialogs.tkDialogs.__init__ ( self, f_title )

        #** ----------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  _QueryInteger::getResult
    #*  -------------------------------------------------------------------------------------------
    #*  obtem o campo de entrada de dados convertido para inteiro
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return o campo de entrada de dados convertido para inteiro
    #*  -------------------------------------------------------------------------------------------
    #*/
    def getResult ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "_QueryInteger::getResult"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*  retorna o campo de entrada de dados e o flag Ok
        #*/
        return ( self._bOk )

    #** -------------------------------------------------------------------------------------------
    #*  dlgConfirm::makeBody
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def makeBody ( self, f_frmM ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgConfirm::makeBody"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  labels
        #*/
        l_lbl1 = Tkinter.Label ( f_frmM, font = "{MS Sans Serif} 10",
                                         text = self._szPrompt )
        l_lbl1.grid ( column = 1, row = 1, columnspan = 2, sticky = "news" )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

#** ===============================================================================================
#*  convenience dialogues
#*  ===============================================================================================
#*/

#** -----------------------------------------------------------------------------------------------
#*  dlgConfirm::askConfirm
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
def askConfirm ( f_title, f_prompt, **kw ):

    #/ nome do metodo (logger)
    #/ --------------------------------------------------------------------------------------------
    #l_szMetodo = "dlgConfirm::askConfirm"


    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #logger = logging.getLogger ( l_szMetodo )
    #logger.setLevel ( logging.INFO )
    #logger.debug ( ">> " )

    #** -------------------------------------------------------------------------------------------
    #*/
    l_dlg = apply ( dlgConfirm, ( f_title, f_prompt ), kw )
    #assert ( l_dlg )

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*/
    return ( l_dlg.getResult ())

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "dlgConfirm" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*/
    b = askConfirm ( "@T@", "Confirma isto ?" )
 
    #** -------------------------------------------------------------------------------------------
    #*/
    print b

#** ----------------------------------------------------------------------------------------------- *#
