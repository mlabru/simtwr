#!/usr/bin/env python2.5
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2008, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiCAD
#*  Classe...: dlgPercurso
#*
#*  Descricao: da inicio ao sistema, inicializar todas as variaveis
#*             globais utilizadas no sistema
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteracao
#*  -----------------------------------------------------------------------------------------------
#*  mlabru   2008/???/??  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versao
#*  -----------------------------------------------------------------------------------------------
#*  start    2008/???/??  version started
#*  1.2-0.1  2008/JUN/20  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ Tkinter (gui library)
#/ ------------------------------------------------------------------------------------------------
import Tkinter

#/ SiCAD / model
#/ ------------------------------------------------------------------------------------------------
import model.locDefs as locDefs

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  dlgPercurso::dlgPercurso
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class dlgPercurso:

    #** -------------------------------------------------------------------------------------------
    #*  dlgPercurso::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgPercurso::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  flag Ok
        #*/
        self._bOk = False

        #** ---------------------------------------------------------------------------------------
        #*  Ok button
        #*/
        self._btnOk = 0

        #** ---------------------------------------------------------------------------------------
        #*  frame master
        #*/
        self._frmM = 0

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgPercurso::criaWindow
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def criaWindow ( self, f_tkRoot ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgPercurso::criaWindow"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  widgets initialization
        #*/
        self._frmM = Tkinter.Frame ( f_tkRoot )
        self._frmM.pack ()

        #** ---------------------------------------------------------------------------------------
        #*  labels
        #*/
        l_lbl1 = Tkinter.Label ( self._frmM, font = "{MS Sans Serif} 12",
                                             text = "Confirma o percurso ?" )
        l_lbl1.grid ( column = 1, row = 1, columnspan = 2 )

        #** ---------------------------------------------------------------------------------------
        #*  frame buttons
        #*/
        l_frmButtons = Tkinter.Frame ( self._frmM )
        l_frmButtons.pack ()
        l_frmButtons.grid ( column = 1, row = 2, columnspan = 2, sticky = "news" )

        #** ---------------------------------------------------------------------------------------
        #*  button (Ok)
        #*/
        self._btnOk = Tkinter.Button ( l_frmButtons, width = 6, text = "Sim", command = self.doOk, state = Tkinter.ACTIVE )
        self._btnOk.pack ( side = Tkinter.LEFT, padx = 5 )

        #** ---------------------------------------------------------------------------------------
        #*  button (Cancel)
        #*/
        l_btnCancel = Tkinter.Button ( l_frmButtons, width = 6, text = "Nao", command = self.doCancel )
        l_btnCancel.pack ( side = Tkinter.RIGHT, padx = 5 )

        #** ---------------------------------------------------------------------------------------
        #*  resize behavior (self._frmM)
        #*/
        #self._frmM.grid_rowconfigure ( 1, weight = 0, minsize = 40, pad = 0 )
        #self._frmM.grid_rowconfigure ( 2, weight = 0, minsize = 40, pad = 0 )

        #self._frmM.grid_columnconfigure ( 1, weight = 0, minsize = 40, pad = 0 )
        #self._frmM.grid_columnconfigure ( 2, weight = 0, minsize = 40, pad = 0 )

        #** ---------------------------------------------------------------------------------------
        #*/
        f_tkRoot.geometry ( "%+d%+d" % ( 700, 500 ))

        #** ---------------------------------------------------------------------------------------
        #*/
        f_tkRoot.update ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgPercurso::doOk
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doOk ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgPercurso::doOk"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*/
        self._frmM.quit ()

        #** ---------------------------------------------------------------------------------------
        #*/
        self._bOk = True

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgPercurso::doCancel
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doCancel ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgPercurso::doCancel"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*/
        self._frmM.quit ()

        #** ---------------------------------------------------------------------------------------
        #*/
        self._bOk = False

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  dlgPercurso::startPanel
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def startPanel ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "dlgPercurso::startPanel"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger = logging.getLogger ( l_szMetodo )
        #logger.setLevel ( logging.INFO )
        #logger.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  load Tkinter
        #*/
        l_tkRoot = Tkinter.Tk ()
        l_tkRoot.title ( locDefs.xTXT_Tit )

        #** ---------------------------------------------------------------------------------------
        #*  cria a janela de configuracao
        #*/
        self.criaWindow ( l_tkRoot )

        #** ---------------------------------------------------------------------------------------
        #*  processa o dialogo
        #*/
        l_tkRoot.mainloop ()

        #** ---------------------------------------------------------------------------------------
        #*  unload Tkinter
        #*/
        l_tkRoot.destroy ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #logger.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( self._bOk )

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "dlgPercurso" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( logging.DEBUG )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*/
    d = dlgPercurso ()
    x = d.startPanel ()

    #** -------------------------------------------------------------------------------------------
    #*/
    print d
    print x

#** ----------------------------------------------------------------------------------------------- *#
